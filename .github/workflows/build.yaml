name: Build
on:
  pull_request:
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
    tags:
      - "*"
env:
  QUAY_RHACS_ENG_RW_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
  QUAY_RHACS_ENG_RW_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
  QUAY_STACKROX_IO_RW_USERNAME: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
  QUAY_STACKROX_IO_RW_PASSWORD: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}

jobs:

  build-and-push-rocksdb:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/rocksdb.Dockerfile
          image-flavor: "rocksdb"

  build-and-push-stackrox-build:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-rocksdb
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/stackrox-build.Dockerfile
          image-flavor: "stackrox-build"

  build-and-push-stackrox-test:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-stackrox-build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/stackrox-test.Dockerfile
          image-flavor: "stackrox-test"
          builds-on: "stackrox-build"

  build-and-push-collector:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/collector.Dockerfile
          image-flavor: "collector"

  build-and-push-scanner-build:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-rocksdb
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/scanner-build.Dockerfile
          image-flavor: "scanner-build"

  build-and-push-scanner-test:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-scanner-build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/scanner-test.Dockerfile
          image-flavor: "scanner-test"
          builds-on: "scanner-build"

  build-and-push-jenkins-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: ./.github/actions/build-and-push-image
        with:
          dockerfile-path: images/jenkins-plugin.Dockerfile
          image-flavor: "jenkins-plugin"

  test-cci-export:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-stackrox-test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Test cci-export in a context similar to how it is used in CI
        run: |
          docker login -u "$QUAY_RHACS_ENG_RW_USERNAME" --password-stdin <<<"$QUAY_RHACS_ENG_RW_PASSWORD" quay.io
          BASE_TAG="$(.circleci/get_tag.sh stackrox-test)"

          docker build \
            --build-arg BASE_TAG="$BASE_TAG" \
            -f images/test.cci-export.Dockerfile \
            -t test.cci-export \
            images/
          docker run --rm test.cci-export
