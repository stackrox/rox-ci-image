name: Create and push a multiarch manifest
description: |
  This action will create a multiarch manifest and push it to a remote registry.

inputs:
  base-image:
    description:
      The base image to used for the manifest
    required: true
  image-flavor:
    description:
      The image flavor tag to be used for the manifest
    required: true
  suffix:
    description:
      Optional suffix for the tags used and the manifest
    default: ''
  archs:
    description:
      Architectures to be included in the final manifest, separated by a space
    default: 'amd64 arm64'
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        image_flavor="${{ inputs.image-flavor }}"
        tag="$(scripts/get_tag.sh ${image_flavor})"
        read -ra archs <<< "${{ inputs.archs }}"
        declare -a images=()
        for arch in "${archs[@]}"; do
          images+=("${{ inputs.base-image }}:${tag}-${arch}${{ inputs.suffix }}")
        done

        docker manifest create "${{ inputs.base-image }}:${tag}${{ inputs.suffix }}" "${images[@]}"
        docker manifest push "${{ inputs.base-image }}:${tag}${{ inputs.suffix }}"

