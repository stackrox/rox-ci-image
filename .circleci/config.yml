defaults: &defaults
  docker:
    - image: cimg/base:stable

version: 2.1

commands:
  build-and-push-image:
    parameters:
      tag-prefix:
        description: Prefix to be added before the tag.
        type: string
        default: ""
      dockerfile-path:
        description: Path to the Dockerfile
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            export TAG="$(git describe --tags --abbrev=10)"
            docker build images/ -f << parameters.dockerfile-path >> \
              -t "stackrox/apollo-ci:snapshot-<< parameters.tag-prefix >>$TAG" \
              -t "stackrox/apollo-ci:<< parameters.tag-prefix >>$TAG"

      - run:
          name: Push image
          command: |
            docker login -u "$DOCKER_IO_PUSH_USERNAME" -p "$DOCKER_IO_PUSH_PASSWORD"

            export TAG="$(git describe --tags --abbrev=10)"
            if [[ $CIRCLE_BRANCH = master || -n $CIRCLE_TAG ]]; then
              echo "Pushing release image"
              image_to_push="stackrox/apollo-ci:<< parameters.tag-prefix >>$TAG"
            else
              echo "Pushing snapshot image"
              image_to_push="stackrox/apollo-ci:snapshot-<< parameters.tag-prefix >>$TAG"
            fi
            docker push "${image_to_push}" | cat
            echo "${image_to_push}" > /tmp/pushed_image

      - persist_to_workspace:
          root: /tmp
          paths:
            - pushed_image


jobs:
  build-and-push-rox:
    <<: *defaults
    steps:
      - build-and-push-image:
          dockerfile-path: images/Dockerfile.rox

  create-or-update-dependent-rox-pr:
    <<: *defaults
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "c7:dd:37:f0:33:4b:a1:16:80:d6:56:48:fd:d3:6c:87"
    - attach_workspace:
        at: /tmp

    - run:
        name: Clone rox repo
        command: |
          git clone git@github.com:stackrox/rox.git /tmp/rox

    - run:
        name: Create commit that updates the base image, and create PR
        command: |
          pushed_image="$(cat /tmp/pushed_image)"
          [[ -n "${pushed_image}" ]]
          echo "Image pushed: ${pushed_image}"
          cd /tmp/rox

          git config user.email "roxbot@stackrox.com"
          git config user.name "RoxBot"

          branch_name="roxbot/update-ci-image-from-${CIRCLE_PULL_REQUEST##*/}"
          if git branch -a | grep -qx '[[:space:]]*remotes/origin/'"${branch_name}"; then
            echo "Found existing branch, halting..."
            git checkout "${branch_name}"
          else
            echo "Creating new branch"
            git checkout -b "${branch_name}"
            git push --set-upstream origin "${branch_name}"
          fi


          sed -i 's@stackrox/apollo-ci:.*@'"${pushed_image}"'@g' .circleci/config.yml
          git commit -am "Bump base image to ${pushed_image##:}"
          git push

    - run:
        name: Create PR
        command: |
          branch_name="roxbot/update-ci-image-from-${CIRCLE_PULL_REQUEST##*/}"
          .circleci/create_update_pr_rox.sh "${branch_name}"

  build-and-push-collector:
    <<: *defaults
    steps:
      - build-and-push-image:
          dockerfile-path: images/Dockerfile.collector
          tag-prefix: "collector-"

  build-and-push-jenkins-plugin:
    <<: *defaults
    steps:
      - build-and-push-image:
          dockerfile-path: images/Dockerfile.jenkins-plugin
          tag-prefix: "jenkins-plugin-"

workflows:
  version: 2
  build:
    jobs:
    - build-and-push-rox:
        context: docker-io-push
        filters:
          tags:
            only: /.*/
    - create-or-update-dependent-rox-pr:
        context: docker-io-pull
        filters:
          branches:
            ignore: master
        requires:
        - build-and-push-rox
    - build-and-push-collector:
        context: docker-io-push
        filters:
          tags:
            only: /.*/
    - build-and-push-jenkins-plugin:
        context: docker-io-push
        filters:
          tags:
            only: /.*/
