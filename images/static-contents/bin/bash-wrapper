#!/bin/real-bash
# shellcheck shell=bash

# cci-export is a function which can be used to export environment variables in a way that is persistent
# across CircleCI steps.
cci-export() {
  if [ "$#" -ne 2 ]; then
    echo >&2 "Usage: $0 KEY VALUE"
    return 1
  fi

  key="$1"
  value="$2"

  export "${key}=${value}"

  if [[ "$CIRCLECI" == "true" ]]; then
    if [[ -z "${BASH_ENV}" ]]; then
      echo >&2 "Env var BASH_ENV not properly set"
      return 1
    fi

    # Use export with default value in the following form
    # export __FOO_VALUE=bar
    # export FOO="${FOO:-"${__FOO_VALUE}"}"'
    # for the following reasons:
    # - Using Bash default value (FOO=${FOO:-default}) - so that variables set in the environment are not overwritten by `$BASH_ENV`
    # - Using a variable holding the default value (__FOO_VALUE=value) - so that multiline values (e.g., certificates) are supported
    #
    # An example of BASH_ENV contents:
    # export __FOO_VALUE=bar
    # export FOO="${FOO:-"${__FOO_VALUE}"}"'
    # export __BAZ_VALUE=baz
    # export BAZ="${BAZ:-"${__BAZ_VALUE}"}"'

    default_var_key="export __${key}_VALUE" # hopefullly this is var name-pattern is unique enough
    default_var_value="$(printf '%q\n' "$value")"
    # shellcheck disable=SC2016 # we must produce literal ${} symbols
    export_with_default="$(printf 'export %q="${%q:-"${__%q_VALUE}"}"\n' "$key" "$key" "$key")"

    # Remove all lines starting with:
    # export __VAR_VALUE=
    # export VAR=
    # for the same exported variable (VAR), to 'forget' about past cci-export calls,
    # otherwise the first call to cci-export would define a default value for the variable, so that
    # second and subsequent calls to cci-export would have no effect.
    if [[ -f "$BASH_ENV" ]]; then
      filtered_envfile="$(mktemp -t "bash.env-XXXX")"
      # The first pattern (-e) is necessary for correctness
      # The second pattern is optional for correctness, but it prevents duplicates
      grep --invert-match --fixed-strings \
        -e "${default_var_key}=" \
        -e "export ${key}=" \
        "$BASH_ENV" > "${filtered_envfile}" && mv "${filtered_envfile}" "$BASH_ENV"
    fi
    printf "%s=%s\n%s\n" "$default_var_key" "$default_var_value" "$export_with_default" >> "$BASH_ENV"
  fi
}

export -f cci-export

exec /bin/real-bash "$@"
