# Provides the tooling required to build Scanner images and test Scanner
# binaries and images. Builds upon scanner-build.Dockerfile.

ARG BASE_TAG
FROM quay.io/rhacs-eng/apollo-ci:${BASE_TAG} as base
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

COPY static/etc/yum.repos.d/ /etc/yum.repos.d/
COPY static/usr/local/bin/ /usr/local/bin/

# BASH_ENV enables env var persistence across CI steps exected in the same
# runtime environment.
ENV BASH_ENV /etc/initial-bash.env

# PostgreSQL environment
ENV PG_MAJOR=12
ENV PATH="$PATH:/usr/pgsql-$PG_MAJOR/bin/"

RUN dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm \
    && dnf update -y \
    && dnf install -y \
        expect \
        gcc \
        gcc-c++ \
        jq \
        kubectl \
        libxcrypt-compat \
        lsof \
        lz4 \
        openssl \
        postgresql${PG_MAJOR}-server \
        python3 \
        unzip \
        xz \
        zip \
    && dnf clean all \
    && rm -rf /var/cache/dnf /var/cache/yum

# Installing GC and GCP SDK.
#
# These packages are signed with SHA1, which is restricted by default in
# RHEL9[1]. We disable the restriction to verify signatures.
#
# [1]: https://access.redhat.com/articles/6846411
#
RUN update-crypto-policies --set DEFAULT:SHA1 \
  && dnf install -y \
         google-cloud-sdk \
         google-cloud-sdk-gke-gcloud-auth-plugin \
  && update-crypto-policies --set DEFAULT:NO-SHA1

# Use updated auth plugin for GCP
ENV USE_GKE_GCLOUD_AUTH_PLUGIN=True
RUN gke-gcloud-auth-plugin --version

# Install docker binary
ARG DOCKER_VERSION=20.10.6
RUN set -ex \
  && DOCKER_URL="https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz" \
  && echo Docker URL: $DOCKER_URL \
  && wget --no-verbose -O /tmp/docker.tgz "${DOCKER_URL}" \
  && ls -lha /tmp/docker.tgz \
  && tar -xz -C /tmp -f /tmp/docker.tgz \
  && install /tmp/docker/docker /usr/local/bin \
  && rm -rf /tmp/docker /tmp/docker.tgz \
  && command -v docker \
  && (docker version --format '{{.Client.Version}}' || true)

# oc
RUN set -ex \
  && wget --no-verbose -O oc.tgz \
     https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz \
  && tar -xf oc.tgz \
  && install openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit/oc /usr/local/bin \
  && rm -rf openshift-* oc.tgz \
  && command -v oc

# helm
RUN set -ex \
  && wget --no-verbose -O helm.tgz https://get.helm.sh/helm-v3.3.0-linux-amd64.tar.gz \
  && tar -xf helm.tgz \
  && install linux-amd64/helm /usr/local/bin \
  && rm -rf helm.tgz linux-amd64 \
  && command -v helm

# Install yq v4.16.2
RUN set -ex \
  && wget --no-verbose "https://github.com/mikefarah/yq/releases/download/v4.16.2/yq_linux_amd64" \
  && sha256sum --check --status <<< "5c911c4da418ae64af5527b7ee36e77effb85de20c2ce732ed14c7f72743084d  yq_linux_amd64" \
  && mv yq_linux_amd64 /usr/bin/yq \
  && chmod +x /usr/bin/yq

# Install hub-comment
RUN set -ex \
  && wget --quiet https://github.com/joshdk/hub-comment/releases/download/0.1.0-rc6/hub-comment_linux_amd64 \
  && sha256sum --check --status <<< "2a2640f44737873dfe30da0d5b8453419d48a494f277a70fd9108e4204fc4a53  hub-comment_linux_amd64" \
  && mv hub-comment_linux_amd64 /usr/bin/hub-comment \
  && chmod +x /usr/bin/hub-comment
